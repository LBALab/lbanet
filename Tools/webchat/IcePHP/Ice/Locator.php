<?php
// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `Locator.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

require_once 'Ice/Identity.php';
require_once 'Ice/ProcessF.php';

if(!class_exists('Ice_AdapterNotFoundException'))
{
    class Ice_AdapterNotFoundException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'Ice::AdapterNotFoundException';
        }

        public function __toString()
        {
            global $Ice__t_AdapterNotFoundException;
            return IcePHP_stringifyException($this, $Ice__t_AdapterNotFoundException);
        }
    }

    $Ice__t_AdapterNotFoundException = IcePHP_defineException('::Ice::AdapterNotFoundException', 'Ice_AdapterNotFoundException', null, null);
}

if(!class_exists('Ice_InvalidReplicaGroupIdException'))
{
    class Ice_InvalidReplicaGroupIdException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'Ice::InvalidReplicaGroupIdException';
        }

        public function __toString()
        {
            global $Ice__t_InvalidReplicaGroupIdException;
            return IcePHP_stringifyException($this, $Ice__t_InvalidReplicaGroupIdException);
        }
    }

    $Ice__t_InvalidReplicaGroupIdException = IcePHP_defineException('::Ice::InvalidReplicaGroupIdException', 'Ice_InvalidReplicaGroupIdException', null, null);
}

if(!class_exists('Ice_AdapterAlreadyActiveException'))
{
    class Ice_AdapterAlreadyActiveException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'Ice::AdapterAlreadyActiveException';
        }

        public function __toString()
        {
            global $Ice__t_AdapterAlreadyActiveException;
            return IcePHP_stringifyException($this, $Ice__t_AdapterAlreadyActiveException);
        }
    }

    $Ice__t_AdapterAlreadyActiveException = IcePHP_defineException('::Ice::AdapterAlreadyActiveException', 'Ice_AdapterAlreadyActiveException', null, null);
}

if(!class_exists('Ice_ObjectNotFoundException'))
{
    class Ice_ObjectNotFoundException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'Ice::ObjectNotFoundException';
        }

        public function __toString()
        {
            global $Ice__t_ObjectNotFoundException;
            return IcePHP_stringifyException($this, $Ice__t_ObjectNotFoundException);
        }
    }

    $Ice__t_ObjectNotFoundException = IcePHP_defineException('::Ice::ObjectNotFoundException', 'Ice_ObjectNotFoundException', null, null);
}

if(!class_exists('Ice_ServerNotFoundException'))
{
    class Ice_ServerNotFoundException extends Ice_UserException
    {
        public function __construct()
        {
        }

        public function ice_name()
        {
            return 'Ice::ServerNotFoundException';
        }

        public function __toString()
        {
            global $Ice__t_ServerNotFoundException;
            return IcePHP_stringifyException($this, $Ice__t_ServerNotFoundException);
        }
    }

    $Ice__t_ServerNotFoundException = IcePHP_defineException('::Ice::ServerNotFoundException', 'Ice_ServerNotFoundException', null, null);
}

if(!isset($Ice__t_LocatorRegistry))
{
    $Ice__t_LocatorRegistry = IcePHP_declareClass('::Ice::LocatorRegistry');
    $Ice__t_LocatorRegistryPrx = IcePHP_defineProxy($Ice__t_LocatorRegistry);
}

if(!interface_exists('Ice_Locator'))
{
    interface Ice_Locator
    {
        public function findObjectById($id);
        public function findAdapterById($id);
        public function getRegistry();
    }

    class Ice_LocatorPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::Ice::Locator', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Ice::Locator', $facet);
        }
    }

    $Ice__t_Locator = IcePHP_defineClass('::Ice::Locator', 'Ice_Locator', true, $Ice__t_Object, null, null);

    $Ice__t_LocatorPrx = IcePHP_defineProxy($Ice__t_Locator);

    IcePHP_defineOperation($Ice__t_Locator, 'findObjectById', 2, 1, array($Ice__t_Identity), null, $Ice__t_ObjectPrx, array($Ice__t_ObjectNotFoundException));
    IcePHP_defineOperation($Ice__t_Locator, 'findAdapterById', 2, 1, array($IcePHP__t_string), null, $Ice__t_ObjectPrx, array($Ice__t_AdapterNotFoundException));
    IcePHP_defineOperation($Ice__t_Locator, 'getRegistry', 2, 1, null, null, $Ice__t_LocatorRegistryPrx, null);
}

if(!interface_exists('Ice_LocatorRegistry'))
{
    interface Ice_LocatorRegistry
    {
        public function setAdapterDirectProxy($id, $proxy);
        public function setReplicatedAdapterDirectProxy($adapterId, $replicaGroupId, $p);
        public function setServerProcessProxy($id, $proxy);
    }

    class Ice_LocatorRegistryPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::Ice::LocatorRegistry', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Ice::LocatorRegistry', $facet);
        }
    }

    $Ice__t_LocatorRegistry = IcePHP_defineClass('::Ice::LocatorRegistry', 'Ice_LocatorRegistry', true, $Ice__t_Object, null, null);

    $Ice__t_LocatorRegistryPrx = IcePHP_defineProxy($Ice__t_LocatorRegistry);

    IcePHP_defineOperation($Ice__t_LocatorRegistry, 'setAdapterDirectProxy', 2, 2, array($IcePHP__t_string, $Ice__t_ObjectPrx), null, null, array($Ice__t_AdapterNotFoundException, $Ice__t_AdapterAlreadyActiveException));
    IcePHP_defineOperation($Ice__t_LocatorRegistry, 'setReplicatedAdapterDirectProxy', 2, 2, array($IcePHP__t_string, $IcePHP__t_string, $Ice__t_ObjectPrx), null, null, array($Ice__t_AdapterNotFoundException, $Ice__t_AdapterAlreadyActiveException, $Ice__t_InvalidReplicaGroupIdException));
    IcePHP_defineOperation($Ice__t_LocatorRegistry, 'setServerProcessProxy', 2, 2, array($IcePHP__t_string, $Ice__t_ProcessPrx), null, null, array($Ice__t_ServerNotFoundException));
}
?>
